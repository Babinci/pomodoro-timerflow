
#Project information
- Relevant project information is in memory-bank directory
- understanding deployment and docker- Dockerfile and restart_docker.sh

# Fundamental Principles
- Write clean, simple, readable code
- Implement features in the simplest possible way
- Keep files small and focused (<200 lines)
- Test after every meaningful change
- Focus on core functionality before optimization
- Use clear, consistent naming
- Think thoroughly before coding. Write 2-3 reasoning paragraphs.
- ALWAYS write simple, clean and modular code.
- Use clear and easy-to-understand language, write in short sentences.

# Error Fixing
- DO NOT JUMP TO CONCLUSIONS! Consider multiple possible causes before deciding.
- Explain the problem in plain English
- Make minimal necessary changes, changing as few lines of code as possible
- In case of strange errors, ask the user to perform a Perplexity web search to find up-to-date information

# Building Process
- Verify each new feature works by telling the user how to test it
- DO NOT write complicated and confusing code. Opt for the simple & modular approach.
- When not sure what to do, tell the user to perform a web search





# Thinking patterns
When you create implementation plan- make it very specific and precise- with numbered steps and very precise description what to change and why


## Thinking patterns
- think on how you are confident on solution
- If you are confident less than 7/10 on solution, ask what more information you need
- If you are not confident on solution, ask for more context
- if you are unsure about solution, ask a question for clarification

think step by step, but only keep a minimum draft for each thinking step, with 5 words ar most. Return the answer at the end of the response after a separator ####